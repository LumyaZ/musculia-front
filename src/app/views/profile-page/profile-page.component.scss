@use "sass:map";
@use "../../../styles/_variables.scss" as *;
@use "../../../styles/_mixins.scss" as *;

.profile-container {
  padding: map.get($spacing, 'md');
  max-width: 800px;
  margin: 0 auto;
  min-height: calc(100vh - 5.5rem - 5rem);
  margin-bottom: 5rem;
  display: flex;
  flex-direction: column;
  gap: map.get($spacing, 'lg');
}

.personal-info-block {
  position: relative;
  background-color: map.get($colors, 'surface');
  padding: map.get($spacing, 'xl');
  border-radius: 24px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  @include glass-effect;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: map.get($spacing, 'lg');
  margin-top: map.get($spacing, 'lg');

  .back-button {
    position: absolute;
    top: map.get($spacing, 'md');
    left: map.get($spacing, 'md');
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    background-color: white; /* White background */
    color: map.get($colors, 'primary'); /* Primary color arrow */
    padding: 0;
    z-index: 10;

    i {
      font-size: 1rem;
      margin: 0;
    }

    &:hover {
      background-color: map.get($colors, 'accent'); /* Light grey hover */
    }
  }

  .profile-main {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: map.get($spacing, 'lg');
    width: 100%;

    .profile-header {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: map.get($spacing, 'md');

      .profile-avatar {
        width: 5rem;
        height: 5rem;
        border-radius: 50%;
        background: linear-gradient(45deg, map.get($colors, 'primary'), map.get($colors, 'secondary'));
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        font-weight: 600;
        margin-bottom: 0;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      }

      .profile-info {
        text-align: left;

        h2 {
          color: map.get($colors, 'primary');
          font-size: 1.5rem;
          margin: 0;
          font-weight: 600;
        }
      }
    }

    .profile-stats {
      display: flex;
      gap: map.get($spacing, 'xl');
      margin-top: map.get($spacing, 'md');
      width: 100%;
      justify-content: center;

      .stat-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: map.get($spacing, 'xs');
        padding: map.get($spacing, 'md');
        background-color: rgba(map.get($colors, 'primary'), 0.05);
        border-radius: 12px;
        min-width: 120px;

        .stat-value {
          font-size: 1.5rem;
          font-weight: 600;
          color: map.get($colors, 'primary');
        }

        .stat-label {
          font-size: 0.9rem;
          color: map.get($colors, 'secondary');
        }
      }
    }
  }

  .modify-button {
    display: flex;
    align-items: center;
    justify-content: center; /* Center button content */
    gap: map.get($spacing, 'sm');
    padding: map.get($spacing, 'md') map.get($spacing, 'lg');
    border-radius: 8px;
    border: none;
    background: linear-gradient(45deg, #ffffff, #cccccc); /* White to grey gradient */
    color: #333;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: map.get($spacing, 'lg');
    width: 100%;
    max-width: 300px; /* Limit button width */
    margin-left: auto;
    margin-right: auto; /* Center button horizontally within personal-info-block */

    i {
      font-size: 1rem;
      color: #333;
    }

    span {
      font-size: 1rem;
      font-weight: 600;
    }

    &:hover {
      opacity: 0.9;
    }
  }
}

.profile-section-block {
  background-color: map.get($colors, 'surface');
  padding: map.get($spacing, 'lg');
  border-radius: 24px;
  @include glass-effect;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: map.get($spacing, 'md');
    padding-bottom: map.get($spacing, 'sm');
    border-bottom: 2px solid rgba(map.get($colors, 'primary'), 0.1);

    h3 {
      color: map.get($colors, 'primary');
      font-size: 1.25rem;
      margin: 0;
      font-weight: 600;
    }

    .edit-button {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      background-color: rgba(map.get($colors, 'primary'), 0.1);
      color: map.get($colors, 'primary');

      &:hover {
        background-color: rgba(map.get($colors, 'primary'), 0.2);
        transform: translateY(-2px);
      }

      i {
        font-size: 1rem;
      }
    }
  }

  .section-content {
    padding: map.get($spacing, 'md') 0;

    .info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: map.get($spacing, 'md');

      .info-item {
        padding: map.get($spacing, 'md');
        background-color: rgba(map.get($colors, 'primary'), 0.05);
        border-radius: 12px;
        display: flex;
        flex-direction: column;
        gap: map.get($spacing, 'xs');

        &.highlight {
          background: linear-gradient(45deg, 
            rgba(map.get($colors, 'primary'), 0.1),
            rgba(map.get($colors, 'secondary'), 0.1)
          );
          border: 1px solid rgba(map.get($colors, 'primary'), 0.1);
        }

        .info-label {
          font-size: 0.875rem;
          color: map.get($colors, 'secondary');
        }

        .info-value {
          font-size: 1.25rem;
          color: map.get($colors, 'primary');
          font-weight: 600;

          small {
            font-size: 0.875rem;
            color: map.get($colors, 'secondary');
            margin-left: 4px;
          }
        }
      }
    }

    .goals-grid {
      display: grid;
      gap: map.get($spacing, 'md');

      .goal-item {
        padding: map.get($spacing, 'md');
        background-color: rgba(map.get($colors, 'primary'), 0.05);
        border-radius: 12px;
        display: flex;
        flex-direction: column;
        gap: map.get($spacing, 'xs');

        .goal-label {
          font-size: 0.875rem;
          color: map.get($colors, 'secondary');
        }

        .goal-value {
          font-size: 1.25rem;
          color: map.get($colors, 'primary');
          font-weight: 600;

          &.highlight {
            background: linear-gradient(45deg, map.get($colors, 'primary'), map.get($colors, 'secondary'));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
          }
        }
      }
    }

    .equipment-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: map.get($spacing, 'md');

      .equipment-item {
        display: flex;
        align-items: center;
        gap: map.get($spacing, 'sm');
        padding: map.get($spacing, 'sm') map.get($spacing, 'md');
        background-color: rgba(map.get($colors, 'primary'), 0.05);
        border-radius: 8px;

        i {
          color: map.get($colors, 'primary');
          font-size: 1rem;
        }

        span {
          color: map.get($colors, 'primary');
          font-size: 0.875rem;
        }
      }
    }
  }
}

.loading-message {
  text-align: center;
  color: map.get($colors, 'secondary');
  padding: map.get($spacing, 'xl');
  font-size: 1.1rem;
}

// Desktop styles
@media (min-width: 768px) {
  .profile-container {
    min-height: calc(100vh - 5.5rem - 5rem);
    margin-bottom: 5rem;
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
  }

  .personal-info-block {
    padding: map.get($spacing, 'xl');
    align-items: flex-start; 

    .back-button {
      top: map.get($spacing, 'xl');
      left: map.get($spacing, 'xl');
    }

    .profile-main {
      flex-direction: column; /* Stack header and stats vertically on desktop */
      gap: map.get($spacing, 'xl');
      margin-top: map.get($spacing, 'md');
      align-items: flex-start; /* Align items within profile-main to the left on desktop */

      .profile-header {
        flex-direction: row;
        gap: map.get($spacing, 'lg');
        /* Remove width and justify here, parent handles alignment */

        .profile-avatar {
          width: 6rem;
          height: 6rem;
          font-size: 2.5rem;
          margin-bottom: 0;
          border: 3px solid white;
        }

        .profile-info {
          text-align: left;

          h2 {
            font-size: 1.75rem;
          }
        }
      }

      .profile-stats {
        flex-direction: row;
        gap: map.get($spacing, 'xl');
        margin-top: map.get($spacing, 'md'); /* Add top margin on desktop */
        justify-content: center; /* Center stats horizontally */
        width: auto; /* Allow stats to take natural width */
        margin-left: auto;
        margin-right: auto; /* Center the block horizontally */
      }
    }

    .modify-button {
      max-width: 300px;
      margin-left: auto;
      margin-right: auto; /* Center button horizontally */
    }
  }

  .profile-section-block {
    .section-header {
      h3 {
        font-size: 1.4rem;
      }

      .edit-button {
        width: 2.5rem;
        height: 2.5rem;

        i {
          font-size: 1.25rem;
        }
      }
    }
  }
}

@media (max-width: 600px) {
  .profile-container {
    padding: map.get($spacing, 'xs');
    gap: map.get($spacing, 'md');
  }
  .personal-info-block {
    padding: map.get($spacing, 'md');
    border-radius: 16px;
    .profile-main {
      gap: map.get($spacing, 'md');
      .profile-header {
        flex-direction: column;
        align-items: flex-start;
        gap: map.get($spacing, 'sm');
        .profile-avatar {
          width: 3.5rem;
          height: 3.5rem;
          font-size: 1.2rem;
        }
        .profile-info h2 {
          font-size: 1.1rem;
        }
      }
      .profile-stats {
        flex-direction: column;
        gap: map.get($spacing, 'sm');
        .stat-item {
          min-width: unset;
          width: 100%;
        }
      }
    }
  }
  .profile-section-block {
    padding: map.get($spacing, 'sm');
    border-radius: 12px;
    .section-header {
      h3 {
        font-size: 1rem;
      }
      .edit-button {
        width: 2rem;
        height: 2rem;
      }
    }
    .section-content {
      .info-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: map.get($spacing, 'sm');
        .info-item {
          padding: map.get($spacing, 'sm');
          font-size: 0.95rem;
          .info-label {
            font-size: 0.8rem;
          }
          .info-value {
            font-size: 1.05rem;
          }
        }
      }
      .goals-grid {
        gap: map.get($spacing, 'sm');
        .goal-item {
          padding: map.get($spacing, 'sm');
          .goal-label {
            font-size: 0.8rem;
          }
          .goal-value {
            font-size: 1.05rem;
          }
        }
      }
      .equipment-list {
        grid-template-columns: repeat(2, 1fr);
        gap: map.get($spacing, 'sm');
        .equipment-item {
          padding: map.get($spacing, 'xs') map.get($spacing, 'sm');
          font-size: 0.9rem;
        }
      }
    }
  }
} 